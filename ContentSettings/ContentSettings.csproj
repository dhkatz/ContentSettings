<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <PackageId>dhkatz.ContentSettings</PackageId>
        <AssemblyName>dhkatz.ContentSettings</AssemblyName>

        <Description>A library for adding Modded Settings.</Description>
        <Authors>CommanderCat101;dhkatz</Authors>

        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageLicenseExpression>GPL-3.0-or-later</PackageLicenseExpression>
        <PackageProjectUrl>https://github.com/dhkatz/ContentSettings</PackageProjectUrl>
        <RepositoryUrl>https://github.com/dhkatz/ContentSettings</RepositoryUrl>
        <RepositoryType>git</RepositoryType>

        <TargetFramework>netstandard2.1</TargetFramework>

        <RestoreAdditionalProjectSources>
            https://api.nuget.org/v3/index.json;
            https://nuget.bepinex.dev/v3/index.json;
        </RestoreAdditionalProjectSources>

        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <LangVersion>latest</LangVersion>
        <Nullable>enable</Nullable>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>

        <!-- Auto Versioning -->
        <MinVerTagPrefix>v</MinVerTagPrefix>
        <MinVerVerbosity>detailed</MinVerVerbosity>

        <!-- Needed for BepInEx.AssemblyPublicizer.MSBuild compatibility with MonoMod -->
        <NoWarn>$(NoWarn);CS0436</NoWarn>
    </PropertyGroup>

    <!-- BepInEx References -->
    <ItemGroup>
        <PackageReference Include="BepInEx.Analyzers" Version="1.*" PrivateAssets="all" ExcludeAssets="RUNTIME"/>
        <PackageReference Include="BepInEx.Core" Version="5.*" ExcludeAssets="RUNTIME"/>
        <PackageReference Include="BepInEx.PluginInfoProps" Version="2.*" ExcludeAssets="RUNTIME"/>
        <PackageReference Include="UnityEngine.Modules" Version="2022.3.10" IncludeAssets="compile" ExcludeAssets="RUNTIME"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="BepInEx.AssemblyPublicizer.MSBuild" Version="0.4.1" PrivateAssets="all" ExcludeAssets="RUNTIME">
            <IncludeAssets>compile; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="MinVer" Version="4.*" PrivateAssets="all" Private="false"/>
        <PackageReference Include="StyleCop.Analyzers" Version="1.1.118" ExcludeAssets="RUNTIME">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup Condition="$(CI) != 'true'">
        <Reference Include="Assembly-CSharp" HintPath="$(CW_REFERENCES)\Assembly-CSharp.dll" Private="False" ExcluseAssets="RUNTIME" Publicize="True"/>
        <Reference Include="Unity.Localization" HintPath="$(CW_REFERENCES)\Unity.Localization.dll" Private="False" ExcluseAssets="RUNTIME" Publicize="true"/>
        <Reference Include="Unity.TextMeshPro" HintPath="$(CW_REFERENCES)\Unity.TextMeshPro.dll" Private="False" ExcluseAssets="RUNTIME" Publicize="true"/>
        <Reference Include="UnityEngine.UI" HintPath="$(CW_REFERENCES)\UnityEngine.UI.dll" Private="False" ExcluseAssets="RUNTIME" Publicize="true"/>
        <Reference Include="Zorro.Core.Runtime" HintPath="$(CW_REFERENCES)\Zorro.Core.Runtime.dll" Private="False" ExcluseAssets="RUNTIME" Publicize="true"/>
        <Reference Include="Zorro.Settings.Runtime" HintPath="$(CW_REFERENCES)\Zorro.Settings.Runtime.dll" Private="False" ExcluseAssets="RUNTIME" Publicize="True"/>
        <Reference Include="Zorro.UI.Runtime" HintPath="$(CW_REFERENCES)\Zorro.UI.Runtime.dll" Private="False" ExcluseAssets="RUNTIME" Publicize="true"/>
    </ItemGroup>

    <ItemGroup Condition="$(CI) == 'true'">
        <PackageReference Include="ContentWarning.GameLibs.Steam" Version="0.1.7-a-ngd.0" Publicize="true" PrivateAssets="All"/>
    </ItemGroup>

    <ItemGroup>
        <None Include="$(ProjectDir)../README.md" Pack="true" PackagePath="/"/>
    </ItemGroup>

    <!-- MinVer Set Mod Version from Git -->
    <Target Name="SetPluginVersion" BeforeTargets="AddGeneratedFile" DependsOnTargets="MinVer">
        <PropertyGroup>
            <PlainVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</PlainVersion>
            <BepInExPluginVersion>$(PlainVersion)</BepInExPluginVersion>
            <GITHUB_RUN_ID Condition="$(CI) != 'true'">0</GITHUB_RUN_ID>
            <FileVersion>$(PlainVersion).$(GITHUB_RUN_ID)</FileVersion>
        </PropertyGroup>
    </Target>

    <Target Name="ThunderstorePack" AfterTargets="PostBuildEvent" Condition="$(TargetFramework) == 'netstandard2.1' and $(Configuration) == 'Release' and $(CI) == 'true'" DependsOnTargets="SetPluginVersion">
        <Exec Command="dotnet tcli build --config-path $(ProjectDir)../assets/thunderstore.toml --package-version $(PlainVersion)"/>
        <ItemGroup>
            <FilesToRename Include="$(ProjectDir)../dist/*-$(PlainVersion).zip"/>
        </ItemGroup>
        <Move SourceFiles="@(FilesToRename)" DestinationFiles="@(FilesToRename -&gt; Replace($(PlainVersion), $(MinVerVersion)))"/>
    </Target>

    <ItemGroup>
        <AdditionalFiles Include="$(MSBuildThisFileDirectory)stylecop.json" Link="stylecop.json"/>
    </ItemGroup>

    <Target Name="Husky" BeforeTargets="Restore;CollectPackageReferences" Condition="'$(HUSKY)' != 0">
        <Exec Command="dotnet tool restore" StandardOutputImportance="Low" StandardErrorImportance="High"/>
        <Exec Command="dotnet husky install" StandardOutputImportance="Low" StandardErrorImportance="High" WorkingDirectory=".."/>
    </Target>
</Project>